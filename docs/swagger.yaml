definitions:
  db.Contact:
    properties:
      about:
        type: string
      activity:
        type: string
      address:
        type: string
      avatar:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: integer
      name:
        type: string
      phone_number:
        type: string
      saves_amount:
        type: integer
      social_links:
        items:
          $ref: '#/definitions/db.Link'
        type: array
      tags:
        items:
          $ref: '#/definitions/db.Tag'
        type: array
      updated_at:
        type: string
      user_id:
        type: integer
      views_amount:
        type: integer
    type: object
  db.Link:
    properties:
      id:
        type: integer
      link:
        type: string
      type:
        type: string
    type: object
  db.Tag:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  transport.DeleteSavedContactRequest:
    properties:
      contact_id:
        example: 1
        type: integer
    type: object
  transport.SaveContactRequest:
    properties:
      contact_id:
        example: 1
        type: integer
    type: object
info:
  contact: { }
  description: API Documentation for the Touchly Backend
  title: Touchly API
  version: "1.0"
paths:
  /contacts:
    get:
      consumes:
        - application/json
      description: get contacts
      parameters:
        - description: name search by q
          format: email
          in: query
          name: q
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Contact'
            type: array
      summary: List contacts
      tags:
        - contacts
    post:
      consumes:
        - application/json
      description: create contact
      parameters:
        - description: contact
          in: body
          name: contact
          required: true
          schema:
            $ref: '#/definitions/db.Contact'
      produces:
        - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/db.Contact'
      summary: Create contact
      tags:
        - contacts
  /contacts/{id}:
    delete:
      consumes:
        - application/json
      description: delete contact
      parameters:
        - description: contact id
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
      summary: Delete contact
      tags:
        - contacts
    get:
      consumes:
        - application/json
      description: get contact
      parameters:
        - description: contact id
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Contact'
      summary: Get contact
      tags:
        - contacts
    put:
      consumes:
        - application/json
      description: update contact
      parameters:
        - description: contact id
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
      summary: Update contact
      tags:
        - contacts
  /contacts/{id}/save:
    post:
      consumes:
        - application/json
      description: save contact
      parameters:
        - description: user id
          in: path
          name: id
          required: true
          type: integer
        - description: contact id to save
          in: body
          name: account
          required: true
          schema:
            $ref: '#/definitions/transport.SaveContactRequest'
      produces:
        - application/json
      responses:
        "200":
          description: OK
      summary: Save contact
      tags:
        - contacts
  /contacts/{id}/saved:
    delete:
      consumes:
        - application/json
      description: delete saved contact
      parameters:
        - description: user id
          in: path
          name: id
          required: true
          type: integer
        - description: contact id to delete
          in: body
          name: account
          required: true
          schema:
            $ref: '#/definitions/transport.DeleteSavedContactRequest'
      produces:
        - application/json
      responses:
        "200":
          description: OK
      summary: Delete saved contact
      tags:
        - contacts
    get:
      consumes:
        - application/json
      description: get saved contacts
      parameters:
        - description: user id
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Contact'
            type: array
      summary: List contacts saved by user
      tags:
        - contacts
securityDefinitions:
  JWT:
    description: This API uses JWT Bearer token. You can get one at /auth
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
